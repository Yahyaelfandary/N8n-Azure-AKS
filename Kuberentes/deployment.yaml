apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-deployment
  labels:
    app: n8n-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: n8n-deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: n8n-deployment
    spec:
      containers:
        - name: n8n
          image: docker.n8n.io/n8nio/n8n
          resources:
            requests:
              memory: "250Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - containerPort: 5678
          env:
            - name: DB_TYPE
              value: "postgresdb"
            - name: DB_POSTGRESDB_HOST
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: DB_POSTGRESDB_HOST
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: DB_POSTGRESDB_DATABASE
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: DB_POSTGRESDB_USER
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: DB_POSTGRESDB_PASSWORD
            - name: DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED
              value: "false"
            - name: DB_POSTGRESDB_SCHEMA
              value: "public"
            - name: N8N_HOST
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: N8N_HOST
            - name: WEBHOOK_URL
              value: "http://seko-n8n.ip-ddns.com/"